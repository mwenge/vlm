#
# od - Jaguar object list displayer for rdb
# ½ 1992 Atari Corporation
# """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
# This rdb script will display an "English" listing of your object list.
# all you have to do is give is a pointer for the object list you want
# to see.
#
#	Fixed bug: reverse of reflect and RMW
#	Added alignment warning
#	New chips have longer data pointer shorter link pointer
#

procedure od addr
	local laddr type temp temp2 lptr

	print
	set laddr addr
#:start
	set laddr laddr+@7
	set type (peek( laddr ) & $7 )
	if type==0 goto bitmap
	if type==1 goto scaled
	if type==2 goto gpu
	if type==3 goto branch
	if type==4 goto stop
	print -i "Unknown object type"
	print -i "Listing aborted"
	goto end

#:bitmap
	print -i " bitmap " -r ": " -x laddr-7
	set temp ((laddr-7)&$f)
	if (temp!=0) print -i "Must be double phrase boundary"
	print -n " Ypos: " -d ((wpeek(laddr-1)>>3) & $7ff)
	print -n " Height: " -d ((lpeek(laddr-3)>>@13) & $3ff)

	set temp ((lpeek(laddr-3)&$ff000000)>>@24)
# Old one
#	set temp2 (wpeek(laddr-5) & $0fff )
#
	set temp2 (wpeek(laddr-5) & $07ff )
	set temp ((temp2<<8)|temp)
	set lptr temp<<3
	print -n " Link: " -x lptr
	
	set temp lpeek(laddr-7)
# Old one
#	set temp ((temp>>@12) & $000fffff)
#
	set temp ((temp>>@11) & $001fffff)
	print " Data: " -x temp<<3

# end of line one.

	set laddr laddr+@7
	set temp wpeek( laddr )
	print -n " Xpos: " -d (temp & $0fff)
	
	print -n " Pixel Depth: " -d ((temp & $7000)>>@12)
	
	set temp lpeek(laddr-2)
	print -n " Pitch: " -d ((temp & $00038000)>>@15)
	print " Dwidth: " -d ((temp & $0ffc0000)>>@18)

# end of line two


	set temp2 temp>>@28
	set temp wpeek(laddr-4)
	print -n " Iwidth: " -d (((temp & $3f) << 4)|temp2)
	print -n " Index: " -d ((temp>>6) & $007f)
	print -n " RMW: " -d ((temp>>@14) & 1 )
	print " Reflect: " -d ((temp>>@13) & 1 )
	print -n " Transparent: " -d ((temp>>@15) & 1 )
	set temp wpeek( laddr-6)
	print -n " Release: " -d ( temp & $1 )
	print " Firstpix: " -d ((temp>>1) & 3f )
	print
#	set laddr laddr+2
	set laddr lptr
	goto start

#:scaled
	print -i " scaled bitmap " -r ": " -x laddr-7
	set temp ((laddr-7)&$1f)
	if (temp!=0) print -i "Must be quad phrase boundary"
	print -n " Ypos: " -d ((wpeek(laddr-1)>>3) & $7ff)
	print -n " Height: " -d ((lpeek(laddr-3)>>@13) & $3ff)

	set temp ((lpeek(laddr-3)&$ff000000)>>@24)
# Old one 
#	set temp2 (wpeek(laddr-5) & $0fff )
#
	set temp2 (wpeek(laddr-5) & $07ff )
	set temp ((temp2<<8)|temp)
	set lptr temp<<3
	print -n " Link: " -x lptr
	
	set temp lpeek(laddr-7)
# Old one
#	set temp ((temp>>@12) & $000fffff)
#
	set temp ((temp>>@11) & $001fffff)
	print " Data: " -x temp<<3
	
# start of line 2

	set laddr laddr+@7
	set temp wpeek( laddr )
	print -n " Xpos: " -d (temp & $0fff)
	
	print -n " Pixel Depth: " -d ((temp & $7000)>>@12)
	
	set temp lpeek(laddr-2)
	print -n " Pitch: " -d ((temp & $00038000)>>@15)
	print -n " Dwidth: " -d ((temp & $0ffc0000)>>@18)

	set temp2 temp>>@28
	set temp wpeek( laddr-4)
	print -n " Iwidth: " -d (((temp & $3f) << 4)|temp2)
	print " Index: " -d ((temp>>6) & $007f)
	print -n " RMW: " -d ((temp>>@14) & 1 )
	print -n " Reflect: " -d ((temp>>@13) & 1 )
	print -n " Transparent: " -d ((temp>>@15) & 1 )
	set temp wpeek( laddr-6)
	print -n " Release: " -d ( temp & $1 )
	print " Firstpix: " -d ((temp>>1) & 3f )

	set laddr laddr+@8
#	print "laddr is " -x laddr
	set temp wpeek( laddr )
	print -n " Hscale: " -d (((temp & $00ff)&$e0)>>5) -t -d ((temp&$00ff)&$1f) "/32"
	print -n " Vscale: " -d ((((temp & $ff00)>>8)&$e0)>>5) -t -d (((temp&$ff00)>>8)&$1f) "/32"
	set temp wpeek( laddr-2)
	print " Remainder: " -d (temp & $00ff)
	set laddr lptr
	print
	goto start

#:gpu
	print -i " gpu " -r ":  " -x laddr-7
	print -n " Ypos: " -d ((wpeek(laddr-1)>>3) & $7ff)
	print " Data: " -x -n -t (lpeek( laddr-7))
	print -t -x ( lpeek( laddr-3 ) & ffffc000 )
	print
	goto start

#:branch
	print -i " branch " -r ": " -x laddr-7
	print -n " Ypos: " -d ((wpeek(laddr-1)>>3) & $7ff)
	print -n " CC: " -d ((wpeek(laddr-1))>>@14)

	set temp ((lpeek(laddr-3)&$ff000000)>>@24)
	set temp2 (wpeek(laddr-5) & $0fff )
	set temp ((temp2<<8)|temp)
	set lptr temp<<3
	print "Link: " -x lptr

# The following causes ALL BRANCHES TAKEN
#	set laddr lptr

# The following line causes NO BRANCHES TAKEN
	set laddr laddr+1

	goto start

#:stop
	print -i " Stop " -r ": " -x laddr-7
	goto end

#:end
	print
	print
	print "-- end of list --"
	print
.


procedure ods addr addr1

	local laddr type temp addrad temp2 lptr
	if (`argc==2) goto goodarg

	print Usage: ods ShadAddr DlistAddr
	print  (v0.1)
	goto end1
#:goodarg
	print
	set laddr addr
	set addrad addr-addr1
#:start
	set laddr laddr+@7
	set type (peek( laddr ) & $7 )
	if type==0 goto bitmap
	if type==1 goto scaled
	if type==2 goto gpu
	if type==3 goto branch
	if type==4 goto stop
	print -i "Unknown object type"
	print -i "Listing aborted"
	goto end

#:bitmap
	print -i " bitmap " -r ": " -x laddr-7
	set temp ((laddr-7)&$f)
	if (temp!=0) print -i "Must be double phrase boundary"
	print -n " Ypos: " -d ((wpeek(laddr-1)>>3) & $7ff)
	print -n " Height: " -d ((lpeek(laddr-3)>>@13) & $3ff)

	set temp ((lpeek(laddr-3)&$ff000000)>>@24)
# Old one
#	set temp2 (wpeek(laddr-5) & $0fff )
#
	set temp2 (wpeek(laddr-5) & $07ff )
	set temp ((temp2<<8)|temp)
	set lptr temp<<3
	print -n " Link: " -x lptr
	
	set temp lpeek(laddr-7)
# Old one
#	set temp ((temp>>@12) & $000fffff)
#
	set temp ((temp>>@11) & $001fffff)
	print " Data: " -x temp<<3

# end of line one.

	set laddr laddr+@7
	set temp wpeek( laddr )
	print -n " Xpos: " -d (temp & $0fff)
	
	print -n " Pixel Depth: " -d ((temp & $7000)>>@12)
	
	set temp lpeek(laddr-2)
	print -n " Pitch: " -d ((temp & $00038000)>>@15)
	print " Dwidth: " -d ((temp & $0ffc0000)>>@18)

# end of line two


	set temp2 temp>>@28
	set temp wpeek(laddr-4)
	print -n " Iwidth: " -d (((temp & $3f) << 4)|temp2)
	print -n " Index: " -d ((temp>>6) & $007f)
	print -n " RMW: " -d ((temp>>@14) & 1 )
	print " Reflect: " -d ((temp>>@13) & 1 )
	print -n " Transparent: " -d ((temp>>@15) & 1 )
	set temp wpeek( laddr-6)
	print -n " Release: " -d ( temp & $1 )
	print " Firstpix: " -d ((temp>>1) & 3f )
	print
#	set laddr laddr+2
	set laddr lptr+addrad
	goto start

#:scaled
	print -i " scaled bitmap " -r ": " -x laddr-7
	set temp ((laddr-7)&$1f)
	if (temp!=0) print -i "Must be quad phrase boundary"
	print -n " Ypos: " -d ((wpeek(laddr-1)>>3) & $7ff)
	print -n " Height: " -d ((lpeek(laddr-3)>>@13) & $3ff)

	set temp ((lpeek(laddr-3)&$ff000000)>>@24)
# Old one 
#	set temp2 (wpeek(laddr-5) & $0fff )
#
	set temp2 (wpeek(laddr-5) & $07ff )
	set temp ((temp2<<8)|temp)
	set lptr temp<<3
	print -n " Link: " -x lptr
	
	set temp lpeek(laddr-7)
# Old one
#	set temp ((temp>>@12) & $000fffff)
#
	set temp ((temp>>@11) & $001fffff)
	print " Data: " -x temp<<3
	
# start of line 2

	set laddr laddr+@7
	set temp wpeek( laddr )
	print -n " Xpos: " -d (temp & $0fff)
	
	print -n " Pixel Depth: " -d ((temp & $7000)>>@12)
	
	set temp lpeek(laddr-2)
	print -n " Pitch: " -d ((temp & $00038000)>>@15)
	print -n " Dwidth: " -d ((temp & $0ffc0000)>>@18)

	set temp2 temp>>@28
	set temp wpeek( laddr-4)
	print -n " Iwidth: " -d (((temp & $3f) << 4)|temp2)
	print " Index: " -d ((temp>>6) & $007f)
	print -n " RMW: " -d ((temp>>@14) & 1 )
	print -n " Reflect: " -d ((temp>>@13) & 1 )
	print -n " Transparent: " -d ((temp>>@15) & 1 )
	set temp wpeek( laddr-6)
	print -n " Release: " -d ( temp & $1 )
	print " Firstpix: " -d ((temp>>1) & 3f )

	set laddr laddr+@8
#	print "laddr is " -x laddr
	set temp wpeek( laddr )
	print -n " Hscale: " -d (((temp & $00ff)&$e0)>>5) -t -d ((temp&$00ff)&$1f) "/32"
	print -n " Vscale: " -d ((((temp & $ff00)>>8)&$e0)>>5) -t -d (((temp&$ff00)>>8)&$1f) "/32"
	set temp wpeek( laddr-2)
	print " Remainder: " -d (temp & $00ff)
	set laddr lptr+addrad
	print
	goto start

#:gpu
	print -i " gpu " -r ":  " -x laddr-7
	print -n " Ypos: " -d ((wpeek(laddr-1)>>3) & $7ff)
	print " Data: " -x -n -t (lpeek( laddr-7))
	print -t -x ( lpeek( laddr-3 ) & ffffc000 )
	print
	goto start

#:branch
	print -i " branch " -r ": " -x laddr-7
	print -n " Ypos: " -d ((wpeek(laddr-1)>>3) & $7ff)
	print -n " CC: " -d ((wpeek(laddr-1))>>@14)

	set temp ((lpeek(laddr-3)&$ff000000)>>@24)
	set temp2 (wpeek(laddr-5) & $0fff )
	set temp ((temp2<<8)|temp)
	set lptr temp<<3
	print "Link: " -x lptr

# The following causes ALL BRANCHES TAKEN
#	set laddr lptr

# The following line causes NO BRANCHES TAKEN
	set laddr laddr+1

	goto start

#:stop
	print -i " Stop " -r ": " -x laddr-7
	goto end

#:end
	print
	print
	print "-- end of list --"
	print
#:end1
.

