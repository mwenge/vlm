; Generated by mit2mot v1.0.3 on Sep 12 1994 14:04:36
; call: _srand to set the seed (push a 32 bit seed on the
; stack)
; call: _rand to get a random number back in d0
;
; both functions use d0-d1/a0-a1, leave all other
; registers alone


gcc2_compiled_:
	.bss
	.even
__lseed:
	.ds.l	1
	.text
	.even
	.globl	_srand
_srand:
	link	a6, #0
	clr.l	d0
	move.w	8(a6), d0
	move.l	d0, __lseed
	unlk	a6
	rts
	.even
	.globl	_rand
_rand:
	link	a6, #0
	movem.l	d2-d4, -(sp)
	move.l	#127773, d4
	move.l	d4, -(sp)
	move.l	__lseed, -(sp)
	jsr	___modsi3
	addq.w	#8, sp
	move.l	d0, d1
	asl.l	#2, d1
	add.l	d0, d1
	asl.l	#5, d1
	move.l	d1, d2
	asl.l	#4, d2
	sub.l	d1, d2
	add.l	d0, d2
	move.l	d2, d3
	asl.l	#3, d3
	sub.l	d2, d3
	move.l	d4, -(sp)
	move.l	__lseed, -(sp)
	jsr	___divsi3
	move.l	d0, d1
	add.l	d1, d1
	add.l	d0, d1
	asl.l	#2, d1
	sub.l	d0, d1
	asl.l	#4, d1
	add.l	d0, d1
	asl.l	#2, d1
	add.l	d0, d1
	asl.l	#2, d1
	sub.l	d1, d3
	move.l	d3, __lseed
	bge	L3
	add.l	#2147483647, __lseed
L3:
	move.w	__lseed+2, d0
	and.w	#32767, d0
	movem.l	-12(a6), d2-d4
	unlk	a6
	rts

	.globl	__divsi3, ___divsi3
	.globl	__modsi3, ___modsi3

__divsi3:
___divsi3:
	move.l	d2, a0
	move.l	d3, a1
	clr.w	-(sp)
	clr.l	d0
	move.l	10(sp), d2
	beq	.LT1
	bpl	.LT2
	neg.l	d2
	not.w	(sp)
.LT2:	move.l	6(sp), d1
	bpl	.LT3
	neg.l	d1
	not.w	(sp)
.LT3:

	cmp.l	d2, d1
	bcs	.LT4

	tst.w	10(sp)
	bne	.LT5
	move.w	d1, d3
	clr.w	d1
	swap	d1
	beq	.LT6
	divu	d2, d1
.LT6:	move.w	d1, d0
	swap	d0
	move.w	d3, d1
	divu	d2, d1
	move.w	d1, d0
	clr.w	d1
	swap	d1
	bra	.LT4

.LT5:
	moveq	#31, d3
.LT7:
	add.l	d1, d1
	addx.l	d0, d0
	cmp.l	d2, d0
	bcs	.LT8
	sub.l	d2, d0
	addq.w	#1, d1
.LT8:
	dbra	d3, .LT7
	exg	d0, d1
.LT4:
	tst.w	6(sp)
	bpl	.LT9
	neg.l	d1


.LT9:	tst.w	(sp)+
	bpl	.LT10
	neg.l	d0
.LT10:
	move.l	a1, d3
	move.l	a0, d2
	rts
.LT1:
	divu	d2, d1
	bra	.LT4


__modsi3:
___modsi3:
	move.l	8(sp), -(sp)
	move.l	8(sp), -(sp)
	jsr	__divsi3
	addq.l	#8, sp
	move.l	d1, d0
	rts


